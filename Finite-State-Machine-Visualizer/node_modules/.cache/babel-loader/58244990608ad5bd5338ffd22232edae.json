{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DMX HANG TRAM\\\\React Project\\\\Informatika\\\\Tai_Hiep\\\\Finite-State-Machine-Visualizer\\\\src\\\\Components\\\\Canvas.jsx\";\nimport React, { Component } from \"react\";\nimport * as go from \"gojs\";\nimport TopBar from \"./TopBar\";\nimport { ReactDiagram } from \"gojs-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction initDiagram() {\n  go.Shape.defineFigureGenerator(\"Ring\", function (shape, w, h) {\n    var param1 = shape ? shape.parameter1 : NaN;\n    if (isNaN(param1) || param1 < 0) param1 = 8;\n    var rad = w / 2;\n    var geo = new go.Geometry();\n    var fig = new go.PathFigure(w, w / 2, true); // clockwise\n\n    geo.add(fig);\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 0, 360, rad, rad, rad, rad).close());\n    fig.add(new go.PathSegment(go.PathSegment.Arc, 0, 360, rad, rad, rad - 4, rad - 4).close());\n    geo.spot1 = new go.Spot(0.156, 0.156);\n    geo.spot2 = new go.Spot(0.844, 0.844);\n    geo.defaultStretch = go.GraphObject.Uniform;\n    return geo;\n  });\n  const $ = go.GraphObject.make;\n  const diagram = $(go.Diagram, {\n    \"undoManager.isEnabled\": true,\n    // must be set to allow for model change listening\n    // 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\n    \"clickCreatingTool.archetypeNodeData\": {\n      text: \"new node\",\n      color: \"lightblue\"\n    },\n    model: $(go.GraphLinksModel, {\n      linkKeyProperty: \"key\" // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\n\n    })\n  }); // define a simple Node template\n\n  diagram.nodeTemplate = $(go.Node, \"Auto\", $(go.Shape, \"Circle\", // Shape.fill is bound to Node.data.color\n  new go.Binding(\"fill\", \"color\")), $(go.TextBlock, {\n    margin: 4,\n    stroke: \"black\"\n  }, // some room around the text\n  new go.Binding(\"text\", \"name\")));\n  diagram.nodeTemplateMap.add(\"Final\", $(go.Node, \"Auto\", $(go.Shape, \"Ring\", new go.Binding(\"fill\", \"color\")), $(go.TextBlock, {\n    margin: 5,\n    stroke: \"black\"\n  }, // some room around the text\n  new go.Binding(\"text\", \"name\"))));\n  diagram.linkTemplate = $(go.Link, {\n    curve: go.Link.Bezier,\n    curviness: 50,\n    adjusting: go.Link.Stretch,\n    reshapable: true,\n    relinkableFrom: true,\n    relinkableTo: true,\n    toShortLength: 3\n  }, // Bezier curve\n  $(go.Shape), $(go.Shape, {\n    toArrow: \"Standard\"\n  }), // $(go.TextBlock, \"left\", { alignmentFocus: new go.Spot(1, 0.5, 3, 0) }, new go.Binding(\"text\").makeTwoWay())\n  $(go.Panel, \"Auto\", $(go.Shape, // the label background, which becomes transparent around the edges\n  {\n    fill: $(go.Brush, \"Radial\", {\n      0: \"rgb(245, 245, 245)\",\n      0.7: \"rgb(245, 245, 245)\",\n      1: \"rgba(245, 245, 245, 0)\"\n    }),\n    stroke: null\n  }), $(go.TextBlock, \"transition\", {\n    textAlign: \"center\",\n    font: \"9pt helvetica, arial, sans-serif\",\n    margin: 4\n  }, new go.Binding(\"text\").makeTwoWay())));\n  return diagram;\n}\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentNode: null,\n      states: [],\n      transitions: [],\n      transitionGraph: [],\n      initial: null\n    };\n\n    this.stepInGraph = nextNode => {\n      let markedColor = \"#8a8a8a\";\n      let unmarkedColor = \"white\";\n      this.setState({\n        currentNode: nextNode\n      }, () => {\n        const diagram = this.diagramRef.current.getDiagram();\n        diagram.model.commit(m => {\n          let data = null;\n\n          for (let nd of m.nodeDataArray) {\n            m.set(nd, \"color\", unmarkedColor);\n\n            if (nd.key == nextNode) {\n              data = nd;\n            }\n          }\n\n          m.set(data, \"color\", markedColor);\n        }, \"increment\");\n        this.props.setCurrentNodeLayout(nextNode);\n      });\n    };\n\n    this.diagramRef = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactDiagram, {\n        initDiagram: initDiagram,\n        divClassName: \"diagram-component\",\n        ref: this.diagramRef,\n        nodeDataArray: this.props.nodeDataArray,\n        linkDataArray: this.props.linkDataArray,\n        onModelChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopBar, {\n        initial: this.props.initial,\n        stepInGraph: this.stepInGraph,\n        incrementData: this.incrementData,\n        states: this.props.states,\n        sensors: this.props.sensors,\n        environment: this.props.environment,\n        currentNode: this.state.currentNode,\n        transitions: this.state.currentNode !== null ? this.props.transitionGraph[this.state.currentNode] : {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["C:/Users/DMX HANG TRAM/React Project/Informatika/Tai_Hiep/Finite-State-Machine-Visualizer/src/Components/Canvas.jsx"],"names":["React","Component","go","TopBar","ReactDiagram","initDiagram","Shape","defineFigureGenerator","shape","w","h","param1","parameter1","NaN","isNaN","rad","geo","Geometry","fig","PathFigure","add","PathSegment","Arc","close","spot1","Spot","spot2","defaultStretch","GraphObject","Uniform","$","make","diagram","Diagram","text","color","model","GraphLinksModel","linkKeyProperty","nodeTemplate","Node","Binding","TextBlock","margin","stroke","nodeTemplateMap","linkTemplate","Link","curve","Bezier","curviness","adjusting","Stretch","reshapable","relinkableFrom","relinkableTo","toShortLength","toArrow","Panel","fill","Brush","textAlign","font","makeTwoWay","Canvas","constructor","props","state","currentNode","states","transitions","transitionGraph","initial","stepInGraph","nextNode","markedColor","unmarkedColor","setState","diagramRef","current","getDiagram","commit","m","data","nd","nodeDataArray","set","key","setCurrentNodeLayout","createRef","render","linkDataArray","incrementData","sensors","environment"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as go from \"gojs\";\r\nimport TopBar from \"./TopBar\";\r\nimport { ReactDiagram } from \"gojs-react\";\r\n\r\nfunction initDiagram() {\r\n  go.Shape.defineFigureGenerator(\"Ring\", function (shape, w, h) {\r\n    var param1 = shape ? shape.parameter1 : NaN;\r\n    if (isNaN(param1) || param1 < 0) param1 = 8;\r\n\r\n    var rad = w / 2;\r\n    var geo = new go.Geometry();\r\n    var fig = new go.PathFigure(w, w / 2, true); // clockwise\r\n    geo.add(fig);\r\n    fig.add(\r\n      new go.PathSegment(go.PathSegment.Arc, 0, 360, rad, rad, rad, rad).close()\r\n    );\r\n\r\n    fig.add(\r\n      new go.PathSegment(\r\n        go.PathSegment.Arc,\r\n        0,\r\n        360,\r\n        rad,\r\n        rad,\r\n        rad - 4,\r\n        rad - 4\r\n      ).close()\r\n    );\r\n\r\n    geo.spot1 = new go.Spot(0.156, 0.156);\r\n    geo.spot2 = new go.Spot(0.844, 0.844);\r\n    geo.defaultStretch = go.GraphObject.Uniform;\r\n    return geo;\r\n  });\r\n\r\n  const $ = go.GraphObject.make;\r\n\r\n  const diagram = $(go.Diagram, {\r\n    \"undoManager.isEnabled\": true, // must be set to allow for model change listening\r\n    // 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\r\n    \"clickCreatingTool.archetypeNodeData\": {\r\n      text: \"new node\",\r\n      color: \"lightblue\",\r\n    },\r\n    model: $(go.GraphLinksModel, {\r\n      linkKeyProperty: \"key\", // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\r\n    }),\r\n  });\r\n\r\n  // define a simple Node template\r\n  diagram.nodeTemplate = $(\r\n    go.Node,\r\n    \"Auto\",\r\n    $(\r\n      go.Shape,\r\n      \"Circle\",\r\n      // Shape.fill is bound to Node.data.color\r\n      new go.Binding(\"fill\", \"color\")\r\n    ),\r\n    $(\r\n      go.TextBlock,\r\n      { margin: 4, stroke: \"black\" }, // some room around the text\r\n      new go.Binding(\"text\", \"name\")\r\n    )\r\n  );\r\n\r\n  diagram.nodeTemplateMap.add(\r\n    \"Final\",\r\n    $(\r\n      go.Node,\r\n      \"Auto\",\r\n      $(go.Shape, \"Ring\", new go.Binding(\"fill\", \"color\")),\r\n      $(\r\n        go.TextBlock,\r\n        { margin: 5, stroke: \"black\" }, // some room around the text\r\n        new go.Binding(\"text\", \"name\")\r\n      )\r\n    )\r\n  );\r\n  diagram.linkTemplate = $(\r\n    go.Link,\r\n    {\r\n      curve: go.Link.Bezier,\r\n      curviness: 50,\r\n      adjusting: go.Link.Stretch,\r\n      reshapable: true,\r\n      relinkableFrom: true,\r\n      relinkableTo: true,\r\n      toShortLength: 3,\r\n    }, // Bezier curve\r\n    $(go.Shape),\r\n    $(go.Shape, { toArrow: \"Standard\" }),\r\n    // $(go.TextBlock, \"left\", { alignmentFocus: new go.Spot(1, 0.5, 3, 0) }, new go.Binding(\"text\").makeTwoWay())\r\n    $(\r\n      go.Panel,\r\n      \"Auto\",\r\n      $(\r\n        go.Shape, // the label background, which becomes transparent around the edges\r\n        {\r\n          fill: $(go.Brush, \"Radial\", {\r\n            0: \"rgb(245, 245, 245)\",\r\n            0.7: \"rgb(245, 245, 245)\",\r\n            1: \"rgba(245, 245, 245, 0)\",\r\n          }),\r\n          stroke: null,\r\n        }\r\n      ),\r\n      $(\r\n        go.TextBlock,\r\n        \"transition\",\r\n        {\r\n          textAlign: \"center\",\r\n          font: \"9pt helvetica, arial, sans-serif\",\r\n          margin: 4,\r\n        },\r\n        new go.Binding(\"text\").makeTwoWay()\r\n      )\r\n    )\r\n  );\r\n\r\n  return diagram;\r\n}\r\n\r\nclass Canvas extends Component {\r\n  state = {\r\n    currentNode: null,\r\n    states: [],\r\n    transitions: [],\r\n    transitionGraph: [],\r\n    initial: null,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.diagramRef = React.createRef();\r\n  }\r\n\r\n  stepInGraph = (nextNode) => {\r\n    let markedColor = \"#8a8a8a\";\r\n    let unmarkedColor = \"white\";\r\n    this.setState({ currentNode: nextNode }, () => {\r\n      const diagram = this.diagramRef.current.getDiagram();\r\n      diagram.model.commit((m) => {\r\n        let data = null;\r\n        for (let nd of m.nodeDataArray) {\r\n          m.set(nd, \"color\", unmarkedColor);\r\n          if (nd.key == nextNode) {\r\n            data = nd;\r\n          }\r\n        }\r\n        m.set(data, \"color\", markedColor);\r\n      }, \"increment\");\r\n      this.props.setCurrentNodeLayout(nextNode);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactDiagram\r\n          initDiagram={initDiagram}\r\n          divClassName=\"diagram-component\"\r\n          ref={this.diagramRef}\r\n          nodeDataArray={this.props.nodeDataArray}\r\n          linkDataArray={this.props.linkDataArray}\r\n          onModelChange={() => {}}\r\n        />\r\n\r\n        <TopBar\r\n          initial={this.props.initial}\r\n          stepInGraph={this.stepInGraph}\r\n          incrementData={this.incrementData}\r\n          states={this.props.states}\r\n          sensors={this.props.sensors}\r\n          environment={this.props.environment}\r\n          currentNode={this.state.currentNode}\r\n          transitions={\r\n            this.state.currentNode !== null\r\n              ? this.props.transitionGraph[this.state.currentNode]\r\n              : {}\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n"]},"metadata":{},"sourceType":"module"}