{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DMX HANG TRAM\\\\React Project\\\\Informatika\\\\Tai_Hiep\\\\Finite-State-Machine-Visualizer\\\\src\\\\Components\\\\LayoutController.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState, useRef, useEffect, useCallback } from \"react\";\nimport Canvas from \"./Canvas\";\nimport LeftPanel from \"./LeftPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultInformation = {\n  name: \"Simulator pentru automat finit determinist\",\n  information: \"Acesta este simulatorul creat de Nitescu Radu, Tae Andreea, Stefan Andreea, Pinzariu Denis si Chelu Madalina pentru drona de livrat pachete. Incarcati codul atasat automatului pentru a-l reprezenta intr-o forma vizuala.\"\n};\n\nfunction useEventListener(eventName, handler) {\n  _s();\n\n  let element = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window;\n  const savedHandler = useRef();\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n  useEffect(() => {\n    const isSupported = element && element.addEventListener;\n    if (!isSupported) return;\n\n    const eventListener = event => savedHandler.current(event);\n\n    element.addEventListener(eventName, eventListener);\n    return () => {\n      element.removeEventListener(eventName, eventListener);\n    };\n  }, [eventName, element]);\n}\n\n_s(useEventListener, \"XoZIjRFu3rOkeAcYGIxrbqMN+XY=\");\n\nfunction ProjectInfoPopUp(props) {\n  _s2();\n\n  const [isOpen, changeOpen] = useState(false);\n  const handler = useCallback(e => {\n    if (typeof e.target.className === \"string\" && e.target.className !== \"pr-info\") changeOpen(false);\n  }, []);\n  useEventListener(\"click\", handler);\n\n  const InfoIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"8\",\n    height: \"32\",\n    viewBox: \"0 0 8 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M0 28V14.2222C0 12.0131 1.79086 10.2222 4 10.2222C6.20914 10.2222 8 12.0131 8 14.2222V20.8889V28C8 30.2091 6.20914 32 4 32C1.79086 32 0 30.2091 0 28Z\",\n      fill: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M8 4V4.44444C8 6.65358 6.20914 8.44445 4 8.44445C1.79086 8.44445 0 6.65358 0 4.44444V4C0 1.79086 1.79086 0 4 0C6.20914 0 8 1.79086 8 4Z\",\n      fill: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info-container pr-info\",\n    style: {\n      display: Object.values(props.states).length !== 0 ? \"flex\" : \"none\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"pr-info\",\n      style: {\n        display: isOpen ? \"flex\" : \"none\"\n      },\n      children: Object.values(props.states).map(element => /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"pr-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"pr-info\",\n          children: `Q${element.key}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"pr-info\",\n          children: element.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pr-info\",\n      onClick: () => changeOpen(!isOpen),\n      children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ProjectInfoPopUp, \"x//kGEvWq1ARpN6lSm7ux09gTl4=\", false, function () {\n  return [useEventListener];\n});\n\n_c = ProjectInfoPopUp;\n\nconst PopUp = props => {\n  if (props.displayPopUp !== null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pop-up\",\n    style: {\n      left: props.displayPopUp[0],\n      top: props.displayPopUp[1] + 18\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.popUpInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.popUpInfo.details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"none\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = PopUp;\n\nclass LayoutController extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      currentNode: null,\n      environment: [],\n      limits: [],\n      sensors: [],\n      states: {},\n      transitions: [],\n      transitionGraph: [],\n      nodeDataArray: [],\n      linkDataArray: [],\n      initial: null,\n      displayPopUp: null,\n      popUpInfo: {\n        name: \"\",\n        details: \"\"\n      }\n    };\n    this.machineSetter = {\n      sensors: sensors => this.setState({\n        sensors\n      }),\n      environment: environment => this.setState({\n        environment\n      }),\n      states: states => this.setState({\n        states\n      }),\n      transitions: transitions => this.setState({\n        transitions\n      }),\n      transitionGraph: transitionGraph => this.setState({\n        transitionGraph\n      }),\n      initial: initial => this.setState({\n        initial\n      }),\n      nodeDataArray: nodeDataArray => this.setState({\n        nodeDataArray\n      }),\n      linkDataArray: linkDataArray => this.setState({\n        linkDataArray\n      }),\n      resetToInitial: () => {\n        this.setState({\n          currentNode: null,\n          environment: [],\n          limits: [],\n          sensors: [],\n          states: {},\n          transitions: [],\n          transitionGraph: [],\n          nodeDataArray: [],\n          linkDataArray: [],\n          initial: null,\n          displayPopUp: null,\n          popUpInfo: {\n            name: \"\",\n            details: \"\"\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"contextmenu\", e => {\n      e.preventDefault();\n\n      if (typeof e.target.className === \"string\" && e.target.className.includes(\"transition\")) {\n        let res = e.target.className.split(\" \")[1].split(\"-\");\n        let info = this.state.transitionGraph[res[0]][res[1]].information;\n        this.setState({\n          popUpInfo: info,\n          displayPopUp: [e.pageX, e.pageY]\n        });\n      } else if (this.state.displayPopUp !== null) this.setState({\n        displayPopUp: null\n      });\n\n      return false;\n    }, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Canvas, {\n        sensors: this.state.sensors,\n        environment: this.state.environment,\n        states: this.state.states,\n        transitions: this.state.transitions,\n        transitionGraph: this.state.transitionGraph,\n        initial: this.state.initial,\n        setCurrentNodeLayout: currentNode => this.setState({\n          currentNode\n        }),\n        linkDataArray: this.state.linkDataArray,\n        nodeDataArray: this.state.nodeDataArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n        popUpInfo: this.state.popUpInfo,\n        displayPopUp: this.state.displayPopUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LeftPanel, {\n        currentState: this.state.currentNode !== null ? this.state.states[this.state.currentNode] : defaultInformation,\n        sensors: this.state.sensors,\n        environment: this.state.environment,\n        machineSetter: this.machineSetter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectInfoPopUp, {\n        states: this.state.states\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LayoutController;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProjectInfoPopUp\");\n$RefreshReg$(_c2, \"PopUp\");","map":{"version":3,"sources":["C:/Users/DMX HANG TRAM/React Project/Informatika/Tai_Hiep/Finite-State-Machine-Visualizer/src/Components/LayoutController.jsx"],"names":["React","Component","useState","useRef","useEffect","useCallback","Canvas","LeftPanel","defaultInformation","name","information","useEventListener","eventName","handler","element","window","savedHandler","current","isSupported","addEventListener","eventListener","event","removeEventListener","ProjectInfoPopUp","props","isOpen","changeOpen","e","target","className","InfoIcon","display","Object","values","states","length","map","key","PopUp","displayPopUp","left","top","popUpInfo","details","LayoutController","state","currentNode","environment","limits","sensors","transitions","transitionGraph","nodeDataArray","linkDataArray","initial","machineSetter","setState","resetToInitial","componentDidMount","preventDefault","includes","res","split","info","pageX","pageY","render"],"mappings":"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","sourcesContent":["import React, {\r\n  Component,\r\n  useState,\r\n  useRef,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport Canvas from \"./Canvas\";\r\nimport LeftPanel from \"./LeftPanel\";\r\n\r\nconst defaultInformation = {\r\n  name: \"Simulator pentru automat finit determinist\",\r\n  information:\r\n    \"Acesta este simulatorul creat de Nitescu Radu, Tae Andreea, Stefan Andreea, Pinzariu Denis si Chelu Madalina pentru drona de livrat pachete. Incarcati codul atasat automatului pentru a-l reprezenta intr-o forma vizuala.\",\r\n};\r\n\r\nfunction useEventListener(eventName, handler, element = window) {\r\n  const savedHandler = useRef();\r\n  useEffect(() => {\r\n    savedHandler.current = handler;\r\n  }, [handler]);\r\n\r\n  useEffect(() => {\r\n    const isSupported = element && element.addEventListener;\r\n    if (!isSupported) return;\r\n\r\n    const eventListener = (event) => savedHandler.current(event);\r\n\r\n    element.addEventListener(eventName, eventListener);\r\n\r\n    return () => {\r\n      element.removeEventListener(eventName, eventListener);\r\n    };\r\n  }, [eventName, element]);\r\n}\r\n\r\nfunction ProjectInfoPopUp(props) {\r\n  const [isOpen, changeOpen] = useState(false);\r\n  const handler = useCallback((e) => {\r\n    if (\r\n      typeof e.target.className === \"string\" &&\r\n      e.target.className !== \"pr-info\"\r\n    )\r\n      changeOpen(false);\r\n  }, []);\r\n  useEventListener(\"click\", handler);\r\n\r\n  const InfoIcon = () => (\r\n    <svg\r\n      width=\"8\"\r\n      height=\"32\"\r\n      viewBox=\"0 0 8 32\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M0 28V14.2222C0 12.0131 1.79086 10.2222 4 10.2222C6.20914 10.2222 8 12.0131 8 14.2222V20.8889V28C8 30.2091 6.20914 32 4 32C1.79086 32 0 30.2091 0 28Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M8 4V4.44444C8 6.65358 6.20914 8.44445 4 8.44445C1.79086 8.44445 0 6.65358 0 4.44444V4C0 1.79086 1.79086 0 4 0C6.20914 0 8 1.79086 8 4Z\"\r\n        fill=\"white\"\r\n      />\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className=\"info-container pr-info\"\r\n      style={{\r\n        display: Object.values(props.states).length !== 0 ? \"flex\" : \"none\",\r\n      }}\r\n    >\r\n      <table\r\n        className=\"pr-info\"\r\n        style={{\r\n          display: isOpen ? \"flex\" : \"none\",\r\n        }}\r\n      >\r\n        {Object.values(props.states).map((element) => (\r\n          <tr className=\"pr-info\">\r\n            <th className=\"pr-info\">{`Q${element.key}`}</th>\r\n            <th className=\"pr-info\">{element.name}</th>\r\n          </tr>\r\n        ))}\r\n      </table>\r\n      <button className=\"pr-info\" onClick={() => changeOpen(!isOpen)}>\r\n        <InfoIcon />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst PopUp = (props) => {\r\n  if (props.displayPopUp !== null)\r\n    return (\r\n      <div\r\n        className=\"pop-up\"\r\n        style={{ left: props.displayPopUp[0], top: props.displayPopUp[1] + 18 }}\r\n      >\r\n        <h1>{props.popUpInfo.name}</h1>\r\n        <p>{props.popUpInfo.details}</p>\r\n      </div>\r\n    );\r\n  return <div style={{ display: \"none\" }}></div>;\r\n};\r\n\r\nclass LayoutController extends Component {\r\n  state = {\r\n    currentNode: null,\r\n    environment: [],\r\n    limits: [],\r\n    sensors: [],\r\n    states: {},\r\n    transitions: [],\r\n    transitionGraph: [],\r\n    nodeDataArray: [],\r\n    linkDataArray: [],\r\n    initial: null,\r\n    displayPopUp: null,\r\n    popUpInfo: { name: \"\", details: \"\" },\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\r\n      \"contextmenu\",\r\n      (e) => {\r\n        e.preventDefault();\r\n        if (\r\n          typeof e.target.className === \"string\" &&\r\n          e.target.className.includes(\"transition\")\r\n        ) {\r\n          let res = e.target.className.split(\" \")[1].split(\"-\");\r\n          let info = this.state.transitionGraph[res[0]][res[1]].information;\r\n          this.setState({ popUpInfo: info, displayPopUp: [e.pageX, e.pageY] });\r\n        } else if (this.state.displayPopUp !== null)\r\n          this.setState({ displayPopUp: null });\r\n\r\n        return false;\r\n      },\r\n      false\r\n    );\r\n  }\r\n\r\n  machineSetter = {\r\n    sensors: (sensors) => this.setState({ sensors }),\r\n    environment: (environment) => this.setState({ environment }),\r\n    states: (states) => this.setState({ states }),\r\n    transitions: (transitions) => this.setState({ transitions }),\r\n    transitionGraph: (transitionGraph) => this.setState({ transitionGraph }),\r\n    initial: (initial) => this.setState({ initial }),\r\n    nodeDataArray: (nodeDataArray) => this.setState({ nodeDataArray }),\r\n    linkDataArray: (linkDataArray) => this.setState({ linkDataArray }),\r\n    resetToInitial: () => {\r\n      this.setState({\r\n        currentNode: null,\r\n        environment: [],\r\n        limits: [],\r\n        sensors: [],\r\n        states: {},\r\n        transitions: [],\r\n        transitionGraph: [],\r\n        nodeDataArray: [],\r\n        linkDataArray: [],\r\n        initial: null,\r\n        displayPopUp: null,\r\n        popUpInfo: { name: \"\", details: \"\" },\r\n      });\r\n    },\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Canvas\r\n          sensors={this.state.sensors}\r\n          environment={this.state.environment}\r\n          states={this.state.states}\r\n          transitions={this.state.transitions}\r\n          transitionGraph={this.state.transitionGraph}\r\n          initial={this.state.initial}\r\n          setCurrentNodeLayout={(currentNode) => this.setState({ currentNode })}\r\n          linkDataArray={this.state.linkDataArray}\r\n          nodeDataArray={this.state.nodeDataArray}\r\n        />\r\n        <PopUp\r\n          popUpInfo={this.state.popUpInfo}\r\n          displayPopUp={this.state.displayPopUp}\r\n        />\r\n        <LeftPanel\r\n          currentState={\r\n            this.state.currentNode !== null\r\n              ? this.state.states[this.state.currentNode]\r\n              : defaultInformation\r\n          }\r\n          sensors={this.state.sensors}\r\n          environment={this.state.environment}\r\n          machineSetter={this.machineSetter}\r\n        />\r\n        <ProjectInfoPopUp states={this.state.states} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LayoutController;\r\n"]},"metadata":{},"sourceType":"module"}